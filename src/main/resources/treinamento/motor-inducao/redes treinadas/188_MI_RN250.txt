/**
     Arquivo gerado automaticamente pelo software de treinamento.
     Info : ricosv
     Data: Thu Aug 17 16:54:54 BRT 2017

	    Topologia: [I@7df9319b
	    Funcao de ativacao nas camadas escondidas:*outVal = tanh(x) + 0.001* x; 
	    Funcao de ativacao nas saidas: Linear
	    Eta: 0.1
 	Momentum:0.2
	    Epoca maxima de treinamento: 5000
	    Erro alvo durante treinamento: 1.0E-5


     O nome das variaveis possui informacoes a respeito de sua localizacao na ANN. ex:
     w010 -> o primeiro 0 indica a camada que o neuronio possuidor desse peso esta,
     o segundo numero,'1', indica o número do neurônio da camada (o ultimo neuronio e sempre um bias)
     o ultimo numero ,'0', indica qual a posicao do neuronio alvo localizado na camada seguinte. 
     As variáveis de entrada estão na mesma ordem em que são encontradas no arquivo de treinamento.

   Colunas de ENTRADA referente aos dadosEntrada de treino :
   1   2   3   4
   Colunas de SAIDA referente aos dadosEntrada de treino :
   5
*/


#include <math.h>
// -------- Layer 0 --------
// Neuron 0
double w0_0_0=-0.1096100159182044,w0_0_1=-0.939297135510756,w0_0_2=-0.9584656008637558,w0_0_3=-0.09295287776821017,w0_0_4=-3.3771567421289643,w0_0_5=-1.2528438779698086,w0_0_6=-0.9801640493375752,w0_0_7=-2.642762664132091,w0_0_8=1.2654699308306723,w0_0_9=-0.3830205517365733,w0_0_10=-1.7579185199019527,w0_0_11=-2.051606650849705;
// Neuron 1
double w0_1_0=0.2532612525315241,w0_1_1=2.5908144011817114,w0_1_2=0.39930370416111993,w0_1_3=0.3929046702052879,w0_1_4=-0.34508514463434437,w0_1_5=1.1257594844333247,w0_1_6=0.040595250850990534,w0_1_7=-2.4651467742880153,w0_1_8=-1.6967925476433863,w0_1_9=-0.5933390684369083,w0_1_10=4.34362708376169,w0_1_11=-3.251009938002373;
// Neuron 2
double w0_2_0=0.5701055372835581,w0_2_1=3.470552068742545,w0_2_2=-1.8918363409554215,w0_2_3=-5.006077468305122,w0_2_4=-1.3171521792987932,w0_2_5=-7.296591450842199,w0_2_6=1.2414345760054883,w0_2_7=0.9460536366649746,w0_2_8=-2.909837759416828,w0_2_9=6.016727166823449,w0_2_10=2.225248595878947,w0_2_11=1.5894006086400874;
// Neuron 3
double w0_3_0=-1.1811304817653099,w0_3_1=-0.2510240027334097,w0_3_2=1.8631322857313999,w0_3_3=-9.189332366637553,w0_3_4=-1.2585107559938076,w0_3_5=0.39044311086839706,w0_3_6=-1.8942010638469982,w0_3_7=0.6108930124470726,w0_3_8=2.3143003863960043,w0_3_9=-5.153568734359874,w0_3_10=1.78580246970388,w0_3_11=2.0428375245547;
// Bias
double w0_4_0=1.8751815814883843,w0_4_1=-2.3378100471816747,w0_4_2=-0.8790173512896803,w0_4_3=-4.472368315379984,w0_4_4=0.12834241910969096,w0_4_5=1.5584848770804212,w0_4_6=1.2263576803230936,w0_4_7=2.2135083868301133,w0_4_8=0.1285344769248692,w0_4_9=-3.2242830888148752,w0_4_10=-1.5826309456753627,w0_4_11=1.4841588132197472;
// -------- Layer 1 --------
// Neuron 0
double w1_0_0=-0.44193249848670213,w1_0_1=0.09686529902021883,w1_0_2=-0.20375132570912766,w1_0_3=-0.0013659686034628636,w1_0_4=-2.505229686748322,w1_0_5=-1.3108172257173154,w1_0_6=-0.8818383815720895,w1_0_7=0.7408946508950595,w1_0_8=0.2706226520633994,w1_0_9=0.26449330910354735;
// Neuron 1
double w1_1_0=0.5033519012826999,w1_1_1=-0.5957892896629037,w1_1_2=-0.603447853562389,w1_1_3=1.002420776620283,w1_1_4=1.3544905496666348,w1_1_5=0.28066575462334226,w1_1_6=-1.0341237237702303,w1_1_7=-1.3201370960385173,w1_1_8=-2.494975789732633,w1_1_9=0.6947159367629859;
// Neuron 2
double w1_2_0=-0.2674003762274034,w1_2_1=1.3224339000544814,w1_2_2=1.0367321461460632,w1_2_3=1.0978466019465334,w1_2_4=-0.20187934538826832,w1_2_5=0.9000327471987423,w1_2_6=0.05821617090570588,w1_2_7=-0.7965321122194874,w1_2_8=-1.773313100564463,w1_2_9=0.6359871199282667;
// Neuron 3
double w1_3_0=0.050210870853716144,w1_3_1=3.5345994339285483,w1_3_2=0.8251975042979243,w1_3_3=1.6741245602599515,w1_3_4=1.1560574276784281,w1_3_5=2.633193503371581,w1_3_6=1.2709618875514375,w1_3_7=0.587221841281519,w1_3_8=-0.2967948223362001,w1_3_9=0.5154801893469034;
// Neuron 4
double w1_4_0=-1.7909055644801581,w1_4_1=0.21678990636505224,w1_4_2=-0.28305987569295493,w1_4_3=1.1538187097834047,w1_4_4=-0.7590184853845999,w1_4_5=-1.0392657145598105,w1_4_6=0.9970951239256386,w1_4_7=0.8356824448557932,w1_4_8=-1.2379636844013684,w1_4_9=0.5342193186556219;
// Neuron 5
double w1_5_0=-0.999707220643527,w1_5_1=1.0317576813451381,w1_5_2=-0.9533870379524463,w1_5_3=-1.3406138933017486,w1_5_4=-1.5941484812133149,w1_5_5=-2.6276440044729137,w1_5_6=2.7125126776418633,w1_5_7=3.001309683840214,w1_5_8=-1.5408665452639245,w1_5_9=-1.6903402738580477;
// Neuron 6
double w1_6_0=1.237892714204894,w1_6_1=0.39886977434350235,w1_6_2=0.5644227994974781,w1_6_3=-0.3020139314873438,w1_6_4=-0.8171292259118336,w1_6_5=-0.2959064940150559,w1_6_6=-0.1316574607508318,w1_6_7=1.3551758627589976,w1_6_8=2.0364122639391997,w1_6_9=-1.4833223499649533;
// Neuron 7
double w1_7_0=0.8481886187123333,w1_7_1=-0.28968664050681714,w1_7_2=-0.01598257327544549,w1_7_3=0.21954694083353662,w1_7_4=-2.244541064350108,w1_7_5=-1.8393456686099545,w1_7_6=-0.4158628518771001,w1_7_7=-0.36105815189261803,w1_7_8=1.8360862061187877,w1_7_9=0.31626459824934045;
// Neuron 8
double w1_8_0=-2.3944031769554983,w1_8_1=0.9571442515325361,w1_8_2=-1.1686138440042317,w1_8_3=-0.6215902784572471,w1_8_4=-0.5865460465478619,w1_8_5=0.06413096830517283,w1_8_6=0.4614826946814609,w1_8_7=-0.5979801703078206,w1_8_8=-0.5467245208750855,w1_8_9=1.3350761270944496;
// Neuron 9
double w1_9_0=2.455529424906438,w1_9_1=-3.7422876821158724,w1_9_2=0.5799438978404323,w1_9_3=-0.5799278513356884,w1_9_4=0.4112185138523679,w1_9_5=-0.11619513497151628,w1_9_6=0.010263806560996546,w1_9_7=1.178253477844807,w1_9_8=-1.2613586397246674,w1_9_9=-1.11982648892772;
// Neuron 10
double w1_10_0=-0.48357407759312676,w1_10_1=0.28540095104360363,w1_10_2=0.03655480959712449,w1_10_3=0.027246539552805663,w1_10_4=1.3495480966398579,w1_10_5=-0.9295213360840924,w1_10_6=-3.5532304906108854,w1_10_7=0.7355590530281838,w1_10_8=1.4678117911219595,w1_10_9=1.3492138908946683;
// Neuron 11
double w1_11_0=-1.1621731219706422,w1_11_1=1.3708847974607072,w1_11_2=-0.43362485796390937,w1_11_3=-2.166381932279733,w1_11_4=-1.6115770928458208,w1_11_5=-0.39293149223165147,w1_11_6=-1.0400982336852336,w1_11_7=2.016132885743742,w1_11_8=1.9326422114867228,w1_11_9=1.0266084114163663;
// Bias
double w1_12_0=0.061660134876867105,w1_12_1=1.4734415471874736,w1_12_2=0.32891961688825166,w1_12_3=-1.2074935684212187,w1_12_4=-1.8100214597040354,w1_12_5=-1.9504236325657678,w1_12_6=0.40465070835863265,w1_12_7=0.5898822215986042,w1_12_8=0.5516492482691147,w1_12_9=0.38156040429418636;
// -------- Layer 2 --------
// Neuron 0
double w2_0_0=0.31724032724137885;
// Neuron 1
double w2_1_0=0.5263050581317034;
// Neuron 2
double w2_2_0=-0.3028281153178963;
// Neuron 3
double w2_3_0=0.21520999832583945;
// Neuron 4
double w2_4_0=0.32983495330012486;
// Neuron 5
double w2_5_0=1.4700152815840495;
// Neuron 6
double w2_6_0=0.3517928254853997;
// Neuron 7
double w2_7_0=1.1898054712011812;
// Neuron 8
double w2_8_0=0.2691834064799734;
// Neuron 9
double w2_9_0=-0.23284833960359683;
// Bias
double w2_10_0=0.1562292954836217;

     double outMin = -1; 
     double  outMax = 1;
 
double inMax[] = { 9.7235119650551, 0.0, 190.01372506149, 40.874709609793};
double inMin[] = { -0.063816139185447, -16.668107788381, -259.5624926169, -377.15071232161};
double outMaxD[] = { 127.57201481669};
double outMinD[] = { -0.50206738204537};
// --------------------------------------------------------------------------------------
void normaliza(double *in, int i, double *outN) //(double min, double max, double x)
{
	double a = (2.0) / (inMax[i] - inMin[i]);
	double b = ((-(1.0)) * inMin[i] + (-1) * inMax[i]) / (inMax[i] - inMin[i]);
	*outN = (a * *in + b);
}
void desnormaliza(double x, int i, double *resNorm)
{
	double a = (1 - (-1)) / (outMaxD[i] - outMinD[i]);
	double b = (-(1) * outMinD[i] + (-1) * outMaxD[i]) / (outMaxD[i] - outMinD[i]);
	*resNorm = (x - b) / a;
}
void actvFunc(double x, double *outVal){
*outVal = tanh(x) + 0.001* x;
}
void reden_(double *in0,double *in1,double *in2,double *in3,double *out0){
      double   in1_0 = 0,  in1_1 = 0,  in1_2 = 0,  in1_3 = 0,  in1_4 = 0,  in1_5 = 0,  in1_6 = 0,  in1_7 = 0,  in1_8 = 0,  in1_9 = 0,  in1_10 = 0,  in1_11 = 0;
      double   in2_0 = 0,  in2_1 = 0,  in2_2 = 0,  in2_3 = 0,  in2_4 = 0,  in2_5 = 0,  in2_6 = 0,  in2_7 = 0,  in2_8 = 0,  in2_9 = 0;
double  out0D = 0;
double  in0N = 0, in1N = 0, in2N = 0, in3N = 0;
normaliza(in0,0,&in0N);
normaliza(in1,1,&in1N);
normaliza(in2,2,&in2N);
normaliza(in3,3,&in3N);
actvFunc(( in0N * w0_0_0 +  in1N * w0_1_0 +  in2N * w0_2_0 +  in3N * w0_3_0 + -1.0*w0_4_0), &in1_0);
actvFunc(( in0N * w0_0_1 +  in1N * w0_1_1 +  in2N * w0_2_1 +  in3N * w0_3_1 + -1.0*w0_4_1), &in1_1);
actvFunc(( in0N * w0_0_2 +  in1N * w0_1_2 +  in2N * w0_2_2 +  in3N * w0_3_2 + -1.0*w0_4_2), &in1_2);
actvFunc(( in0N * w0_0_3 +  in1N * w0_1_3 +  in2N * w0_2_3 +  in3N * w0_3_3 + -1.0*w0_4_3), &in1_3);
actvFunc(( in0N * w0_0_4 +  in1N * w0_1_4 +  in2N * w0_2_4 +  in3N * w0_3_4 + -1.0*w0_4_4), &in1_4);
actvFunc(( in0N * w0_0_5 +  in1N * w0_1_5 +  in2N * w0_2_5 +  in3N * w0_3_5 + -1.0*w0_4_5), &in1_5);
actvFunc(( in0N * w0_0_6 +  in1N * w0_1_6 +  in2N * w0_2_6 +  in3N * w0_3_6 + -1.0*w0_4_6), &in1_6);
actvFunc(( in0N * w0_0_7 +  in1N * w0_1_7 +  in2N * w0_2_7 +  in3N * w0_3_7 + -1.0*w0_4_7), &in1_7);
actvFunc(( in0N * w0_0_8 +  in1N * w0_1_8 +  in2N * w0_2_8 +  in3N * w0_3_8 + -1.0*w0_4_8), &in1_8);
actvFunc(( in0N * w0_0_9 +  in1N * w0_1_9 +  in2N * w0_2_9 +  in3N * w0_3_9 + -1.0*w0_4_9), &in1_9);
actvFunc(( in0N * w0_0_10 +  in1N * w0_1_10 +  in2N * w0_2_10 +  in3N * w0_3_10 + -1.0*w0_4_10), &in1_10);
actvFunc(( in0N * w0_0_11 +  in1N * w0_1_11 +  in2N * w0_2_11 +  in3N * w0_3_11 + -1.0*w0_4_11), &in1_11);
actvFunc(( in1_0 * w1_0_0 +  in1_1 * w1_1_0 +  in1_2 * w1_2_0 +  in1_3 * w1_3_0 +  in1_4 * w1_4_0 +  in1_5 * w1_5_0 +  in1_6 * w1_6_0 +  in1_7 * w1_7_0 +  in1_8 * w1_8_0 +  in1_9 * w1_9_0 +  in1_10 * w1_10_0 +  in1_11 * w1_11_0 + -1.0*w1_12_0), &in2_0);
actvFunc(( in1_0 * w1_0_1 +  in1_1 * w1_1_1 +  in1_2 * w1_2_1 +  in1_3 * w1_3_1 +  in1_4 * w1_4_1 +  in1_5 * w1_5_1 +  in1_6 * w1_6_1 +  in1_7 * w1_7_1 +  in1_8 * w1_8_1 +  in1_9 * w1_9_1 +  in1_10 * w1_10_1 +  in1_11 * w1_11_1 + -1.0*w1_12_1), &in2_1);
actvFunc(( in1_0 * w1_0_2 +  in1_1 * w1_1_2 +  in1_2 * w1_2_2 +  in1_3 * w1_3_2 +  in1_4 * w1_4_2 +  in1_5 * w1_5_2 +  in1_6 * w1_6_2 +  in1_7 * w1_7_2 +  in1_8 * w1_8_2 +  in1_9 * w1_9_2 +  in1_10 * w1_10_2 +  in1_11 * w1_11_2 + -1.0*w1_12_2), &in2_2);
actvFunc(( in1_0 * w1_0_3 +  in1_1 * w1_1_3 +  in1_2 * w1_2_3 +  in1_3 * w1_3_3 +  in1_4 * w1_4_3 +  in1_5 * w1_5_3 +  in1_6 * w1_6_3 +  in1_7 * w1_7_3 +  in1_8 * w1_8_3 +  in1_9 * w1_9_3 +  in1_10 * w1_10_3 +  in1_11 * w1_11_3 + -1.0*w1_12_3), &in2_3);
actvFunc(( in1_0 * w1_0_4 +  in1_1 * w1_1_4 +  in1_2 * w1_2_4 +  in1_3 * w1_3_4 +  in1_4 * w1_4_4 +  in1_5 * w1_5_4 +  in1_6 * w1_6_4 +  in1_7 * w1_7_4 +  in1_8 * w1_8_4 +  in1_9 * w1_9_4 +  in1_10 * w1_10_4 +  in1_11 * w1_11_4 + -1.0*w1_12_4), &in2_4);
actvFunc(( in1_0 * w1_0_5 +  in1_1 * w1_1_5 +  in1_2 * w1_2_5 +  in1_3 * w1_3_5 +  in1_4 * w1_4_5 +  in1_5 * w1_5_5 +  in1_6 * w1_6_5 +  in1_7 * w1_7_5 +  in1_8 * w1_8_5 +  in1_9 * w1_9_5 +  in1_10 * w1_10_5 +  in1_11 * w1_11_5 + -1.0*w1_12_5), &in2_5);
actvFunc(( in1_0 * w1_0_6 +  in1_1 * w1_1_6 +  in1_2 * w1_2_6 +  in1_3 * w1_3_6 +  in1_4 * w1_4_6 +  in1_5 * w1_5_6 +  in1_6 * w1_6_6 +  in1_7 * w1_7_6 +  in1_8 * w1_8_6 +  in1_9 * w1_9_6 +  in1_10 * w1_10_6 +  in1_11 * w1_11_6 + -1.0*w1_12_6), &in2_6);
actvFunc(( in1_0 * w1_0_7 +  in1_1 * w1_1_7 +  in1_2 * w1_2_7 +  in1_3 * w1_3_7 +  in1_4 * w1_4_7 +  in1_5 * w1_5_7 +  in1_6 * w1_6_7 +  in1_7 * w1_7_7 +  in1_8 * w1_8_7 +  in1_9 * w1_9_7 +  in1_10 * w1_10_7 +  in1_11 * w1_11_7 + -1.0*w1_12_7), &in2_7);
actvFunc(( in1_0 * w1_0_8 +  in1_1 * w1_1_8 +  in1_2 * w1_2_8 +  in1_3 * w1_3_8 +  in1_4 * w1_4_8 +  in1_5 * w1_5_8 +  in1_6 * w1_6_8 +  in1_7 * w1_7_8 +  in1_8 * w1_8_8 +  in1_9 * w1_9_8 +  in1_10 * w1_10_8 +  in1_11 * w1_11_8 + -1.0*w1_12_8), &in2_8);
actvFunc(( in1_0 * w1_0_9 +  in1_1 * w1_1_9 +  in1_2 * w1_2_9 +  in1_3 * w1_3_9 +  in1_4 * w1_4_9 +  in1_5 * w1_5_9 +  in1_6 * w1_6_9 +  in1_7 * w1_7_9 +  in1_8 * w1_8_9 +  in1_9 * w1_9_9 +  in1_10 * w1_10_9 +  in1_11 * w1_11_9 + -1.0*w1_12_9), &in2_9);
desnormaliza( ( in2_0 * w2_0_0 +  in2_1 * w2_1_0 +  in2_2 * w2_2_0 +  in2_3 * w2_3_0 +  in2_4 * w2_4_0 +  in2_5 * w2_5_0 +  in2_6 * w2_6_0 +  in2_7 * w2_7_0 +  in2_8 * w2_8_0 +  in2_9 * w2_9_0 + -1.0*w2_10_0),0, &out0D);
 *out0 =  out0D;
}